#
# Common pipeline volume
#
# A generic volume widget. All attributes defined herein are namespaced
# by alsatplg to "pga.N.attribute_name"
#
# Usage: this component can be used by declaring int a parent object. i.e.
#
# 	Object.pga."N" {
#		pipeline_id	1
#		index		0
#	}
#
# Where N is the unique instance number for pga widget in the same alsaconf node.

Class.Widget."pga" {
	#
	# The PGA widget name would be constructed using the pipeline_id and index arguments.
	# For ex: "pga.1.1" or "pga.10.2" etc.
	#
	DefineArgument."pipeline_id" {}

	#
	# Unique index per widget type in pipeline.
	#
	DefineArgument."index" {}

	#include common component definition
	<include/components/component.conf>

	DefineAttribute."uuid" {
		# Token set reference name and type
		token_ref	"sof_tkn_comp.uuid"
	}

	#
	# Bespoke attributes for PGA
	#

	# Volume ramp step type. The values provided will be translated to integer values
	# as specified by the value token reference "sof_tkn_volume_ramp".
	# For example: "linear" is translated to 0, "log" to 1 etc.
	DefineAttribute."ramp_step_type" {
		# Token set reference name
		token_ref	"sof_tkn_volume.word"
		constraints {
			valid_values [
				"linear"
				"log"
				"linear_zc"
				"log_zc"
			]
			tuple_values [
				0
				1
				2
				3
			]
		}
	}

	# Volume ramp step in milliseconds
	DefineAttribute."ramp_step_ms" {
		# Token set reference name
		token_ref	"sof_tkn_volume.word"
	}

	# Attribute categories
	attributes {
		mandatory [
			"pipeline_id"
			"index"
		]
		immutable [
			"uuid"
			"type"
		]
		deprecated [
			"preload_count"
		]
		#
		# pga widget objects instantiated within the same alsaconf node must have unique
		# index attribute
		#
		unique	"index"
	}

	# Set default attribute values for Volume
	type 			"pga"
	uuid 			"7e:67:7e:b7:f4:5f:88:41:af:14:fb:a8:bd:bf:86:82"
	no_pm			"true"
	period_sink_count	2
	period_source_count	2
}
